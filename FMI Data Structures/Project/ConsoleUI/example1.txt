32
[1 2 3]
myList -> [3 4 5 7 9 10]
myList()
myNumber -> 10
myNumber()
head(myList())
tail(myList())
isOdd -> eq(mod(int(#0), 2), 1)
isOdd(5)
isOdd(myNumber())
isEven -> nand(isOdd(#0), 1)
isEven(10)
list(1, 1, 10)
list(5, -0.5, 3)
list(1)
not -> nand(#0, 1)
and -> not(nand(#0, #1))
divisors -> concat([2], list(3, 2, add(1, int(sqrt(#0))))
divisors(4)
if(eq(5, 5), list(1,1,5), sub(5,7)
if(eq(5, 4), list(1,1,5), sub(5,7)
int(5.2)
eq(5, 5)
eq(5, 5.1)
eq([1 2], [1 2])
eq(2, [2 1])
eq(2, [2])
le(-10, 0)
le(5, 5.1)
le(2, [2 1])
le([1 5], [1 2])
le(2, [3])
mod(5 2)
mod(-60 2)
nand(0, 0)
nand(5, 5)
sqrt(25)
sqrt(144)
add(25, 25)
add(-1, -1)
sub(25, 25)
sub(25, -25)
div(5 2)
div(0 2)
concat([1], list(1,2,4))
concat([1], [1])
length([])
length([1 2 3 4 5])
length(list(1, 1, 5))
myNumber -> -10.5
write(5)
write([5 3 4])